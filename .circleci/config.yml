# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2

jobs:
  build:
    docker:
      - image: docker
    working_directory: ~/anydir

    steps:
      - checkout
      - setup_remote_docker:
          version: 17.05.0-ce
      - run:
          name: environment
          command: env
      - run:
          name: docker version
          command: docker --version
      - run:
          name: machine traits
          command: |
            echo "uname -a: " $(uname -a)
            echo "free: " $(free -m)
            echo "whoami: " $(whoami)
            echo "ls -l /var/run: " $(ls -l /var/run)
            echo "ls -l /etc/init.d/: " $(ls -l /etc/init.d/)
      - run:
          name: build
          command: |
            set -x
            docker build -t delivery .
      - run:
          name: test-run
          command: |
            set -x
            docker run delivery
      - deploy:
          name: deliver as docker tar export
          command: |
            set -x
            docker image save delivery -o delivery.tar
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker tag delivery hsimons/delivery
            docker push hsimons/delivery
  test1:
     docker:
       - image: docker
     working_directory: ~/anydir
     steps:
       - run:
           command: |
             echo "test1 passed!"
             exit 0
  test2:
     docker:
       - image: docker
     working_directory: ~/anydir
     steps:
       - run:
           command: |
             echo "test2 passed!"
             exit 0
  test3:
     docker:
       - image: docker
     working_directory: ~/anydir
     steps:
       - run:
           command: |
             echo "test3 passed!"
             exit 0
  deploy stage:
     docker:
       - image: docker
     working_directory: ~/anydir
     steps:
       - run:
           command: |
             echo "splattered all over the stage servers!"
             exit 0
  deploy live:
     docker:
       - image: docker
     working_directory: ~/anydir
     steps:
       - run:
           command: |
             echo "splattered all over the world!"
             exit 0
workflows:
  version: 2
  all:
    jobs:
      - build
      - test1:
          requires:
            - build
      - test2:
          requires:
            - build
      - test3:
          requires:
            - build
      - deploy stage:
          requires:
            - test1
            - test2
      - hold:
          type: approval
          requires:
            - test1
      - deploy live:
          requires:
            - test3
            - deploy stage
            - hold

